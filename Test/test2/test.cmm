// Matrix Multiplication
int arrayA[400]; // 20 * 20
int arrayB[400];
int arrayC[400]; // result

int main()
{
   int MA; // row_A
   int NA; // col_A
   int MB; // row_B
   int NB; // col_B
   int MC; // row_C
   int NC; // col_C
   int i; // row
   int j; // col
   int i_a;
   int i_b;

   MA = 0; // row_A
   NA = 0; // col_A
   MB = 0; // row_B
   NB = 0; // col_B
   MC = 0; // row_C
   NC = 0; // col_C
   i = 0; // row
   j = 0; // col
   i_a = 0;
   i_b = 0;

   // read matrix A
   scan(MA, NA);
   while (i<MA){
      while (j<NA){
         scan(arrayA[i*NA+j]);
         j = j + 1;
      }
      j = 0; 
      i = i + 1;
   }   
   // whether can mul or not
   scan(MB, NB);
   if (NA!=MB) {
      print("Incompatible Dimensions");
      return 0;
   }

   // read matrix B
   i = 0;
   j = 0;
   while (i<MB){
      while (j<NB){
         scan(arrayB[i*NB+j]);
         j = j + 1;
      }
      j = 0; 
      i = i + 1;
   }
      
   MC = MA;
   NC = NB;
   i = 0;
   j = 0;

   while (i<MC){
      while (j<NC){
         // arrayA的第i行和arrayB的第j列相乘
         i_a = 0;
         i_b = j;
         while (i_a<NA){
            arrayC[i*NC+j] = arrayC[i*NC+j] + arrayA[i*NA+i_a]*arrayB[i_b];
            i_a = i_a + 1;
            i_b = i_b + NB;
         }
         j = j + 1;
      }
      j = 0;
      i = i + 1;
   }

   i = 0;
   j = 0;
   while (i<MC){
      while (j<NC){
         printf("%10d", arrayC[i*NC+j]);
         j = j + 1;
      }
      print("");
      j = 0; 
      i = i + 1;
   }  

   return 0;
}
